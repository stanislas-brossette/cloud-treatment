#! /bin/sh
# Wrapper around cloud-processing aiming at dynamically adding objects
# to a database.
set -e

# The `main' really starts after the functions definitions.

  # ---------------- #
  # Helper functions #
  # ---------------- #

set_colors()
{
  red='[0;31m';    lred='[1;31m'
  green='[0;32m';  lgreen='[1;32m'
  yellow='[0;33m'; lyellow='[1;33m'
  blue='[0;34m';   lblue='[1;34m'
  purple='[0;35m'; lpurple='[1;35m'
  cyan='[0;36m';   lcyan='[1;36m'
  grey='[0;37m';   lgrey='[1;37m'
  white='[0;38m';  lwhite='[1;38m'
  std='[m'
}

set_nocolors()
{
  red=;    lred=
  green=;  lgreen=
  yellow=; lyellow=
  blue=;   lblue=
  purple=; lpurple=
  cyan=;   lcyan=
  grey=;   lgrey=
  white=;  lwhite=
  std=
}

# abort err-msg
abort()
{
  echo "add-to-model-database: ${lred}abort${std}: $@" \
  | sed '1!s/^[ 	]*/             /' >&2
  exit 1
}

help()
{
    cloud-processing --help
    echo 'add-object-to-database specific options:
  -m [ --model ] arg		CAD model name
  -d [ --database ] arg		database model name
  -o [ --object ] arg		object name
'
    exit 0
}

  # ------------------- #
  # `main' starts here. #
  # ------------------- #

# Define colors if stdout is a tty.
if test -t 1; then
  set_colors
else # stdout isn't a tty => don't print colors.
  set_nocolors
fi

# For dev's:
test "x$1" = x--debug && shift && set -x

database=""
object=""
model=""
args=""

if `test $# -eq 0`; then
    abort "object, database and model are mandatory"
fi

while `! test $# -eq 0`; do
    case $1 in
	--database | -d)
	    shift
	    database="$1"
	    shift
	    ;;
	--object | -o)
	    shift
	    object="$1"
	    shift
	    ;;
	--model | -m)
	    shift
	    model="$1"
	    shift
	    ;;
	--help | -h)
	    help
	    ;;
	*)
	    shift
	    args="$args $1"
	    shift
	    ;;
    esac
done

if `test x$database = x`; then
    abort "database name is mandatory"
fi
if `test x$object = x`; then
    abort "object name is mandatory"
fi
if `test x$model = x`; then
    abort "model name is mandatory"
fi

cloud-processing \
    -c empty-cloud.pcd \
    -p cadmodeltreatment.yaml \
    -s CADModelTreatmentCell.databaseName="$database" \
    -s CADModelTreatmentCell.objectName="$object" \
    -s CADModelTreatmentCell.cadModelFile="$model" \
    $args
